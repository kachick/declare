= declare

code :: https://github.com/kachick/declare
bugs :: https://github.com/kachick/declare/issues
gem  :: https://rubygems.org/gems/declare

== Description

A unit testing framework with tiny DSL.

== Futures

* Readable from "declaratory" syntax.
* Can nesting the name spaces
* Reports fromated Markdown likes.
* Tiny keyboard typings :)

== Usage

=== Common Setup
    require 'my_app'   # Write here tha path, own lib or codes
    require 'declare'  # at Last of requires

=== When all passed

==== Declare your image

    Declare do

      on(Array) {
        
        a       Class
        kind    Module
        respond :new
        
      }

      on(1) {
        
        is      1.0
        is      1.to_r
        NOT     2
        match   1..3
        equal   1
        hashable
        kind    Integer
        a       Fixnum
        respond :upto
        
        RESCUE Exception do
          raise
        end
        
        CATCH NameError do
          to_str
        end
        
      }

    end

===== Report

    1 categorizies, 2 scopes, 14 behaviors
        pass: 14
        fail: 0


=== When all failed

==== Declare your image

    Declare do

      The(Array) {
        
        a       Module
        kind    Hash
        respond :to_str
        
        on(it.new) {

          a Hash
          
        }

        
      }

      on(1) {
        
        is      1.1
        is      2
        NOT     1
        match   2..3
        equal   1.0
        kind    Float
        a       Integer
        respond :to_str
        
        RESCUE SyntaxError do
          raise
        end
        
        CATCH RuntimeError do
          raise Exception
        end
        
      }

    end

===== Report

    Below definitions are not satisfied some conditions.
    ====================================================
    ## Array ## [filename.rb:7]
      * "It's instance of Module", but MISMATCHED. Real is instance of Class.[filename.rb:9]
      * "It's family of Hash", but MISMATCHED. [filename.rb:10]
      * "It can behave the order #to_str.", but MISMATCHED. [filename.rb:11]

    ### [] ### [filename.rb:13]
      * "It's instance of Hash", but MISMATCHED. Real is instance of Array.[filename.rb:15]

    ## 1 ## [filename.rb:22]
      * "It's equaly value with 1.1 under bidirectical #== method.", but MISMATCHED. [filename.rb:24]
      * "It's equaly value with 2 under bidirectical #== method.", but MISMATCHED. [filename.rb:25]
      * "It isn't 1.", but MISMATCHED. [filename.rb:26]
      * "It satisfies a condition under 2..3.", but MISMATCHED. [filename.rb:27]
      * "It's same object/identififer with 1.0(ID: 21752556).", but MISMATCHED. Real is 1(ID: 3)[filename.rb:28]
      * "It's family of Float", but MISMATCHED. [filename.rb:29]
      * "It's instance of Integer", but MISMATCHED. Real is instance of Fixnum.[filename.rb:30]
      * "It can behave the order #to_str.", but MISMATCHED. [filename.rb:31]
      * "It raises a exception kind of SyntaxError.", but MISMATCHED. Real is faced another exception the RuntimeError.[filename.rb:33]
      * "It raises the exception RuntimeError.", but MISMATCHED. Real is faced another exception the Exception.[filename.rb:37]

    ----------------------------------------------------------------------------
    1 categorizies, 3 scopes, 14 behaviors
        pass: 0
        fail: 14

=== Mixed

==== Declare your image

    class Person
      
      attr_reader :name, :birth
      
      def initialize(name)
        @name = name
        @birth = Time.now
      end

    end

    require '../lib/declare'

    Declare do
      
      The Person.new('John') do

        respond :name
        respond :birth
        a Person
        kind Object
        
        NOT 'Taro'
        
        The it.name do
          
          kind String
      
        end

        The it.birth do
          
          kind Time
          
        end

        truthy it.name.kind_of?(String)
        falthy it.name.match(/[1-9]/)
      
        The it.name do
          
          is 'Taro'
        
        end
        
        
      end
      
    end

===== Report

    Below definitions are not satisfied some conditions.
    ====================================================
    ### "John" ### [mixed.rb:43]
      * "It's equaly value with "Taro" under bidirectical #== method.", but MISMATCHED. [mixed.rb:45]

    ----------------------------------------------------------------------------
    1 categorizies, 4 scopes, 10 behaviors
        pass: 9
        fail: 1

=== TechNote

    Declare do   # start to declare with categorizing text or nothing with :)
      
      # This block is going to be evaluated in Declare::DSL::Basic
      # "it" was undefined
      
      The Person do
        
        # This block is going to be evaluated in Declare::DSL::Scope
        # "it" is point to the "Person class"

        The it.new('John') do
        
          # This block is going to be evaluated in Declare::DSL::Scope
          # "it" is point to the "John"

        end
        
      end
      
    end

=== MoreAPI

See methods in Declare::DSL::Asertions

== Requirements

* Ruby 1.9.2 or later
  
  Focusing
  
  * 1.9.3-p194
  * 1.9.2-p290

== Installation

* gem install declare

== License

The MIT X11 License

Copyright (c) 2012 Kenichi Kamiya

See the file LICENSE for further details.
